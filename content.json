{"meta":{"title":"yamizero","subtitle":"人间四月芳菲尽","description":"","author":"yamizero","url":"http://yoursite.com","root":"/"},"pages":[{"title":"tags","date":"2020-05-24T05:03:32.000Z","updated":"2020-05-24T05:03:32.371Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2020-05-24T01:57:50.000Z","updated":"2020-05-24T01:58:31.385Z","comments":true,"path":"link/index.html","permalink":"http://yoursite.com/link/index.html","excerpt":"","text":""},{"title":"categories","date":"2020-05-24T05:05:05.000Z","updated":"2020-05-24T05:05:05.530Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"cookie和localStorage","slug":"cookieAndStorage","date":"2020-04-06T07:19:13.000Z","updated":"2020-05-26T07:29:01.710Z","comments":true,"path":"2020/04/06/cookieAndStorage/","link":"","permalink":"http://yoursite.com/2020/04/06/cookieAndStorage/","excerpt":"浏览器上存储信息，一般用cookie，还有Storage。Storage包括localStorage和sessionStorage。","text":"浏览器上存储信息，一般用cookie，还有Storage。Storage包括localStorage和sessionStorage。 cookie获取当前域名下的所有cookie1allCookies &#x3D; document.cookie 取出来的cookies类似下面这种，键值对【key=value】以分号隔开 1csrftoken&#x3D;PyeKQnHrP9coM73ZENye8fZIPTTXxDif; dwf_section_edit&#x3D;True; dwf_sg_task_completion&#x3D;False; _ga&#x3D;GA1.2.692413257.1510133300; _gid&#x3D;GA1.2.1049144690.1512451614 获取单个cookie的值上面的方法会取出所有的cookie键值对。这不是我们想要的，但里面也是有规律可找的。没错，就是通过正则表达式来获取需要的那个cookie值。 123456// 假设cookie中保存两个cookiedocument.cookie = \"name1=Lufy\"document.cookie = \"name2=zoro\"// 获取name1的cookievar myCookie = document.cookie.replace(/(?:(?:^|.*;\\s*)name1\\s*\\=\\s*([^;]*).*$)|^.*$/, \"$1\") 设置cookie上面也用到了最简单的设置，那种设置是默认的，而我们不希望那样的。 参数： ;path=path ：（例如：’/‘，’mydir’）。默认【不写此参数】是当前文档位置的路径;domain=domain：域名,默认当前位置路径的域名;max-age=max-age-in-seconds：秒，如一年(60 * 60 * 24 * 365);expires=date-in-GMTString-format：默认在结束会话时过期;secure：设置后cookie只通过https协议传输需要说明的是cookie中不允许包含逗号，分号，空格。 12345//最基本的设置cookiedocument.cookie = \"name3=nami\"//设置带有参数的cookiedocument.cookie = \"name4=sanji; expires=Fri, 31 Dec 9999 23:59:59 GMT; path=/\"; 需要注意的是，expires的值可以通过Date.toUTCString()这个方法获取。删除cookie只需要将它的过期时间(max-age)设置为0 Storage localStorage和sessionStorage保存的数据都是页面的协议。localStorage保存的数据，关闭浏览器也不会丢失。sessionStorage则是关闭浏览器之后数据就丢失了。 操作对于cookie来说，操作localStorage相对简单了。 1234567891011// 设置localStorage.setItem('myToy','car');// 获取localStorage.getItem('myToy');// 移除一个已知的项localStorage.removeItem('myToy');// 清空整个localStoragelocalStorage.clear(); sessionStorage的用法和localStorage一模一样。","categories":[{"name":"编码","slug":"编码","permalink":"http://yoursite.com/categories/%E7%BC%96%E7%A0%81/"}],"tags":[]},{"title":"顶部进度条","slug":"progressTop","date":"2020-03-16T13:19:13.000Z","updated":"2020-05-26T07:28:50.958Z","comments":true,"path":"2020/03/16/progressTop/","link":"","permalink":"http://yoursite.com/2020/03/16/progressTop/","excerpt":"前言：在一些网站上看到一种效果，就是随着页面加载，顶部会有一条优雅的线条移动。当页面加载完成时，它也随之消失。","text":"前言：在一些网站上看到一种效果，就是随着页面加载，顶部会有一条优雅的线条移动。当页面加载完成时，它也随之消失。 插件的方式这个插件叫：NProgress 安装可以通过 1$ npm install --save nprogress 也可以通过使用CDN加速上的链接，如： https://cdn.bootcss.com/nprogress/0.2.0/nprogress.min.css https://cdn.bootcss.com/nprogress/0.2.0/nprogress.min.js 使用12&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;cdn.bootcss.com&#x2F;nprogress&#x2F;0.2.0&#x2F;nprogress.min.css&quot;&gt;&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.bootcss.com&#x2F;nprogress&#x2F;0.2.0&#x2F;nprogress.min.js&quot;&gt;&lt;&#x2F;script&gt; 只需要以下JS代码就可以了，记得加入NProgress的js和css文件 1234567891011121314(function () &#123; document.onreadystatechange = function () &#123; NProgress.start(); if (document.readyState == \"Uninitialized\") &#123; NProgress.set(1); &#125; if (document.readyState == \"Interactive\") &#123; NProgress.set(0.5); &#125; if (document.readyState == \"complete\") &#123; NProgress.done(); &#125; &#125;&#125;)(); 这是最基本的用法，想要微调细节和样式，请参考NProgress 进度条模拟[手写方式]12345&lt;div class=\"progress-wrap\"&gt; &lt;div class=\"progress-inner\"&gt;&lt;/div&gt;&lt;/div&gt;&lt;!-- 为了存在内容加载，引入一个百度的内容 --&gt;&lt;iframe src=\"http://baidu.com/\" frameborder=\"0\"&gt;&lt;/iframe&gt; 123456789101112131415.progress-wrap&#123; position: fixed; //固定定位在顶部 top: 0; left: 0; width: 100%; height: 2px; //进度条的高度 &#125;.progress-inner&#123; position: absolute; top: 0; left: 0; width: 1%; //默认为1% height: 2px; background-color: #31b3db; //进度条的颜色&#125; 12345678910111213141516171819202122232425262728293031323334353637 (function () &#123; // 获取进度条的元素 var progressWrap = document.querySelector('.progress-wrap'); var progressDiv = document.querySelector('.progress-inner'); //初始化进度条为1% var progress = 1; //随机返回最大和最小之前的一个数 var random = function (min, max) &#123; return Math.floor(Math.random() * (max - min + 1) + min); &#125;; var onprogress = function () &#123; //获取一个随机时间 var timeout = random(10, 30); setTimeout(function () &#123; switch (document.readyState) &#123; case \"loading\": // The document is still loading. break; case \"interactive\": progress += random(1, 5); if (progress &gt; 98) &#123; progress = 98; &#125; progressDiv.style.width = progress + '%'; break; case \"complete\": progressDiv.style.width = '100%'; setTimeout(function()&#123; progressWrap.style.display = 'none'; &#125;,130); break; &#125; onprogress(); &#125;, timeout); &#125;; onprogress();&#125;)(); 这样就能实现一个顶部进度条了。 参考链接： document.readyState 如何用 javascript 做一个高逼格的进度条","categories":[{"name":"CSS","slug":"CSS","permalink":"http://yoursite.com/categories/CSS/"}],"tags":[{"name":"CSS小例","slug":"CSS小例","permalink":"http://yoursite.com/tags/CSS%E5%B0%8F%E4%BE%8B/"}]},{"title":"侠客行","slug":"bifeng","date":"2020-02-02T04:19:13.000Z","updated":"2020-05-26T07:27:55.360Z","comments":true,"path":"2020/02/02/bifeng/","link":"","permalink":"http://yoursite.com/2020/02/02/bifeng/","excerpt":"作者：李白","text":"作者：李白 作者：李白赵客缦胡缨，吴钩霜雪明。银鞍照白马，飒沓如流星。十步杀一人，千里不留行。事了拂衣去，深藏身与名。闲过信陵饮，脱剑膝前横。将炙啖朱亥，持觞劝侯嬴。三杯吐然诺，五岳倒为轻。眼花耳热后，意气素霓生。救赵挥金槌，邯郸先震惊。千秋二壮士，烜赫大梁城。纵死侠骨香，不惭世上英。谁能书阁下，白首太玄经。","categories":[{"name":"文章","slug":"文章","permalink":"http://yoursite.com/categories/%E6%96%87%E7%AB%A0/"}],"tags":[]},{"title":"HEXO简易指南","slug":"hexo-0","date":"2020-01-29T13:19:13.000Z","updated":"2020-05-26T07:28:21.506Z","comments":true,"path":"2020/01/29/hexo-0/","link":"","permalink":"http://yoursite.com/2020/01/29/hexo-0/","excerpt":"接下来是一篇安装Hexo的教程，记！","text":"接下来是一篇安装Hexo的教程，记！ 安装之前 安装了Node环境 安装Git 开始安装打开cmd或者shell。因为是全局安装，此时不用在意在哪个文件夹下。 1npm install hexo-cli -g 有时，npm安装会卡住或不动，因为一道墙。这时候可以 1npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org 执行上述命令，就可以把npm的镜像转到淘宝搭的国内镜像。之后只需要把npm换成cnpm在安装Hexo就可以了 1cnpm install hexo-cli -g 初始化博客找到需要安装博客的文件夹，这里面将会是之后博客的所有文件存放的目录，包括之后写的文章。比如为E盘下的blog文件夹下。在这里打开shell执行下面命令。 1hexo init Hexo 如果顺利的话，应该会安装完成，但由于特殊原因，在安装依赖的时候卡住，我建议，还是Ctrl+C先终止操作，在执行下面的命令 1234cd Hexo &#x2F;&#x2F;进入到此目录cnpm install &#x2F;&#x2F;手动用淘宝的镜像安装依赖hexo g &#x2F;&#x2F;表示编译文件hexo s &#x2F;&#x2F;发布服务，默认端口在4000 打开浏览器访问localhost:4000，出现下面的图，恭喜你，成功了。但是，如果你F12审查元素会发现会缺少Jquery，进去到themes\\landscape\\layout\\_partial里面有一个after-footer.ejs，把里面的google的Jquery链接换成https://cdn.bootcss.com/jquery/2.2.0/jquery.min.js。 发布到githubPage 修改 _config.yml中的最后的123deploy: type: git repo: https:&#x2F;&#x2F;github.com&#x2F;yamizero&#x2F;yamizero.github.io.git 之后在执行命令1hexo d 有时会发现1ERROR Deployer not found: git 不要紧可能是没有安装完依赖，继续1cnpm install hexo-deployer-git --save 安装完后，还报错123456*** Please tell me who you are.Run git config --global user.email &quot;you@example.com&quot; git config --global user.name &quot;Your Name&quot; 我…好吧我去设置一波git，因为电脑刚装的Git还没有进行关联。12git config --global user.name &quot;yamizero&quot;git config --global user.email &quot;yamizero.zy@gmail.com&quot; 当你在hexo d的时候回会弹出下面的图输入完成后一切就大功告成了。现在可以通过yamizero.github.io来访问自己的网站了。 新建文章12$ hexo new helloYamizeroINFO Created: E:\\blog\\Hexo\\source\\_posts\\helloYamizero.md 其中new后面可以跟参数，如： 1hexo new[layout] yourArticleName layout为文件夹scaffolds下的文件名，默认的有 post.md draft.md page.md 而layout的默认值会是post，现在在post.md里面添加一个分类的选项。 123456---title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;categories: tags: --- 现在找到刚才生成的markdown文件，用你喜欢的markdown编辑器书写文章吧，这里推荐Sublime Text和Visual Studio Code。都需要安装插件，就能流畅的写文字了。我现在就是用的Visual Studio Code，还能分屏预览。 1&lt;!--more--&gt; 这个是当文章过长时，只需要展示标签上面的内容，后面的内容需要点击阅读更多才会展开。 插入图片可以用七牛的图床，怎么用就自己百度了。还有一种就是用Hexo提供的插件了。 1cnpm install https:&#x2F;&#x2F;github.com&#x2F;CodeFalling&#x2F;hexo-asset-image –save 如果安装失败了，把博客的依赖删除，先安装这个，在安装博客的依赖。在设置_config.yml 1post_asset_folder: true 之后每当使用hexo new article的时候会在_post下生成对应的文件夹，里面就可以存图片了，引用方式：![图片名称](artice/picture.jpg),比如下面这张图片可以用F12审查元素，会发现路径和图床的链接是不一样的。 一般比较常用的两个导航菜单是分类和标签，但是一般没有自动生成它们的页面，点击就会报错。categories的话，建立下面文件或文件夹， 1source\\categories\\index.md index.md 12345---title: date: type: &quot;categories&quot;--- tag类似就可以了， 接下来就是选一个喜欢的主题，在书写代码了。","categories":[{"name":"编码","slug":"编码","permalink":"http://yoursite.com/categories/%E7%BC%96%E7%A0%81/"}],"tags":[]}],"categories":[{"name":"编码","slug":"编码","permalink":"http://yoursite.com/categories/%E7%BC%96%E7%A0%81/"},{"name":"CSS","slug":"CSS","permalink":"http://yoursite.com/categories/CSS/"},{"name":"文章","slug":"文章","permalink":"http://yoursite.com/categories/%E6%96%87%E7%AB%A0/"}],"tags":[{"name":"CSS小例","slug":"CSS小例","permalink":"http://yoursite.com/tags/CSS%E5%B0%8F%E4%BE%8B/"}]}